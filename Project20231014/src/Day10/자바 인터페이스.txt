
자바의 인터페이스
다른 크래스를 작성할 때 기본이 되는 틀을 제공하면서, 다른 클래스 사이의 중간 매개 역할을 담당하는 자료형을 의미합니다.
>> 객체 사용 방법에 대한 가이드 라인 정도의 개념
인터페이스는 추상 메소드와 상수로만 구성
구현된 코드가 없기 때문에 인터페이스 또는 

인터페이스의 사용 목적(이유)
1. 객체들이 사용하는 기능에 대한 이름에 통일성 유지(가독성 증가, 유지보수 향상)
2. 확장에는 열려 있고 변경에는 닫혀 있는 구조(코드 종속성을 낮춤)
   코드 종속성이란? 객체 간의 결함도를 의미 = 유연한 방식의 개발 설계를 도와준다.
   객체에서 기능을 수정한다해도, 인터페이스에서 제공해주는 틀 범위 내에서만 설계된다.
3. 서로 관련 없는 클래스끼리도 인터페이스를 통한 연결을 진행하는 것이 가능해진다.
4. ★ extends를 통해 추가할 수 있는 클래스는 1개, 하지만 implements를 통해 구현할 수 있는 인터페이스는 여러개(다중 상속 보장)
가능한 이유 : 인터페이스는 기능 충돌이 발생하지 않고, 틀만 제공해주기 때문에 다중 상속 시 발생할 수 있는 겹치는 코드가 존재할 때 누구의 값을
사용할 것인가(모호성)에 대한 문제가 발생하지 않습니다.


단답형
클래스가 인터페이스를 구현하기 위해 필요한 키워드는? implements
클래스가 인터페이스를 구현할 때 인터페이스에 선언한 메소드를 모두 구현하지 않을 경우는? 추상 클래스
한 클래스에서 여러 인터페이스를 구현할 수 있는가? yes


interface A {
	public abstract void method1();
	public abstract void method2();
	
}

//abstract class라면 A에 대한 기능을 구현하지 않고 연결만 하는 것도 가능은 하다.
abstract class B implements A {} 
