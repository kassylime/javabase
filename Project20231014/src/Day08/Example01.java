package Day08;

public class Example01 {

	public static void main(String[] args) {
		// 클래스상속(inheritance)
		// 기존의 클래스에 기능을 추가하거나, 재정의해서 새로운 클래스를 정의하는 것
		// 상속을 통해 새 클래스를 만들 경우, 그 클래스 간에 다음과 같은 관계가 형성
		// 기존에 있던 클래스 : 기초 클래스 = 부모 클래스 =  상위 클래스 
		// 상속으로 만든 클래스 : 파생 클래스 = 자식 클래스 = 하위 클래스
		// 상속의 특징 : 자식 클래스를 설계할 경우, 부모 클래스에서 가지고 있는 private 이외의 필드와 메소드를 물려받는다.(재사용 가능 / 중복 설계 방지)
		// private 또는 default(제한자를 작성하지 않는 경우)의 필드나 메소드는 정확하게는 상속은 받아도, 접근은 할 수 없다.
		// 상속의 단점 : 상속을 통해 값을 재정의하는 과정에서 캡슐화에 손상을 줄 가능성이 생긴다.
		// 보안 방법이 있느냐? 상속 대신 컴포지션
		// 설계를 통해 설계한다.
		
	}

}
